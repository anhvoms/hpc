{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "philly",
            "metadata": {
                "description": "User name for the Virtual Machine. Pick a valid username otherwise there will be a BadRequest error."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password. Pick a complex password with uppercase letters, lowercase letters, digits, and symbols. The password should not be longer than 16. Otherwise you'll get a BadRequest error."
            }
        },
        "nodeSize": {
            "type": "string",
            "defaultValue": "Standard_NC24rs_v2",
            "allowedValues": [
                "Standard_E32S_V3"
            ],
            "metadata": {
                "description": "Size of the nodes."
            }
        },
        "nodeCount": {
            "type": "int",
            "defaultValue": 5,

            "metadata": {
                "description": "Specify the number of nodes."
            }
        },
        "OSImage": {
            "type": "string",
            "defaultValue": "provide_your_image_id_string",
            "metadata": {
                "description": "Image to use for all instances of the infrastructure nodes."
            }
        },
        "loadBalancerIP": {
            "type": "string",
            "defaultValue": "10.0.0.4",
            "metadata": {
                "description": "Provide IP address of internal load balancer for pulling config."
            }
        },
        "internalBackendPool":{
            "type": "string",
            "defaultValue": "backendPool of internal LB",
            "metadata": {
                "description": "Provide the backend pool of an existing internal load balancer."
            }
        },
        "externalBackendPool":{
            "type": "string",
            "defaultValue": "backendPool of external LB",
            "metadata": {
                "description": "Provide the backend pool of an existing external load balancer."
            }
        },
        "subnet": {
            "type": "string",
            "defaultValue": "existing_vnet_subnet",
            "metadata": {
                "description": "Provide an existing resource id for a subnet."
            }
        },
        "nsg": {
            "type": "string",
            "defaultValue": "existing_nsg",
            "metadata": {
                "description": "Provide an existing nsg id"
            }
        }
    },
    "variables": {
        "publicIPAddressType": "Dynamic",
        "publicIPAddressName": "publicip-infra",
        "infraVMName": "pinfra00",
        "avSetName": "AVSetInfra",
        "nicName": "nic",
        "base": "10.0.1.",
        "ipstart": 240,
        "templateBaseUrl": "https://raw.githubusercontent.com/anhvoms/hpc/master/philly-cluster/"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-06-01",
            "name": "[concat(variables('publicIPAddressName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "copy": {
              "name": "publicIPCopy",
              "count": "[parameters('nodeCount')]"
            },
            "properties": {
              "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('avSetName')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "sku": {
              "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '-infra00', copyindex())]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', variables('avSetName'))]",
                "Microsoft.Network/networkSecurityGroups/nsg"
            ],
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicCopy",
                "count": "[parameters('nodeCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(variables('base'), copyindex(variables('ipstart')))]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), copyindex()))]"
                            },
                            "subnet": {
                                "id": "[parameters('subnet')]"
                            },
                            "loadBalancerBackendAddressPools": [
                              {
                                "id": "[parameters('internalBackendPool')]"
                              },
                              {
                                "id": "[parameters('externalBackendPool')]"
                              }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[parameters('nsg')]"
                },
                "enableAcceleratedNetworking": true
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('infraVMName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '-infra00', copyindex())]"
            ],
            "copy": {
                "name": "workerVMCopy",
                "count": "[parameters('nodeCount')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('nodeSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('infraVMName'), copyindex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[parameters('OSImage')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "diskSizeGB": 1023,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "createOption": "Empty",
                            "lun": 0,
                            "diskSizeGB": 1023,
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), '-infra00', copyindex()))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('infraVMName'), copyindex(), '/Installation')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('infraVMName'), copyindex())]"
            ],
            "copy": {
                "name": "workerExtCopy1",
                "count": "[parameters('nodeCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(variables('templateBaseUrl'), 'addinfra.sh')]"
                    ],
                    "commandToExecute": "[concat('bash addinfra.sh', ' ', parameters('loadBalancerIP'), ' ', parameters('adminUserName'), ' ', parameters('nodeSize'))]"
                }
            }
        }
    ]
}
